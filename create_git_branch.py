# Generated by Selenium IDE
import pytest
import unittest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCreategitbranch(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Chrome()

    def test_creategitbranch(self):
        self.driver.get("https://github.com/")
        self.driver.set_window_size(1936, 1066)
        self.driver.find_element(By.LINK_TEXT, "Sign in").click()
        self.driver.find_element(By.ID, "login_field").send_keys("boriska67")
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("Tashkent@67")
        self.driver.find_element(By.NAME, "commit").click()
        self.driver.find_element(By.CSS_SELECTOR,
                                 "#dashboard-repos-container > #repos-container .source .d-inline-flex").click()
        element = self.driver.find_element(By.CSS_SELECTOR, ".link-gray-dark > .octicon-git-branch")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        time.sleep(1)
        self.driver.find_element(By.CSS_SELECTOR, "#branch-select-menu > .btn").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "context-commitish-filter-field").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "context-commitish-filter-field").send_keys("new")
        time.sleep(1)
        self.driver.find_element(By.ID, "context-commitish-filter-field").send_keys(Keys.ENTER)
        self.driver.find_element(By.CSS_SELECTOR, ".js-feature-preview-indicator-container > .Header-link").click()
        self.driver.find_element(By.CSS_SELECTOR, ".dropdown-signout").click()


    def teardown_method(self, method):
        self.driver.quit()

if __name__ == '__main__':
    unittest.main()
