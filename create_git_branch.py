# Generated by Selenium IDE
import pytest
import unittest
import time
from branch import Branch
import json
from selenium import webdriver
# from selenium.webdriver.firefox.webdriver import WebDriver
from selenium.webdriver.chrome.webdriver import WebDriver
# from selenium.webdriver.ie.webdriver import WebDriver
from selenium.webdriver.common.by import By
# from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCreategitbranch(unittest.TestCase):
    def setUp(self):
        self.wd = WebDriver()
        self.wd.implicitly_wait(60)

    def test_creategitbranch(self):
        wd = self.wd
        self.open_home_page(wd, "https://github.com/")
        self.open_login_page(wd, sign_in_link="Sign in")
        self.login(wd, username="boriska67", password="Tashkent@67")
        self.open_project_page(wd)
        self.create_new_branch(wd, Branch(branchname="new"))
        self.sign_out(wd)

    def sign_out(self, wd):
        # clicking dropdown
        wd.find_element(By.CSS_SELECTOR, ".js-feature-preview-indicator-container > .Header-link").click()
        # clicking sign out link
        wd.find_element(By.CSS_SELECTOR, ".dropdown-signout").click()

    def create_new_branch(self, wd, branch):
        wd.find_element(By.CSS_SELECTOR, "#branch-select-menu > .btn").click()
        wd.find_element(By.ID, "context-commitish-filter-field").click()
        wd.find_element(By.ID, "context-commitish-filter-field").send_keys(branch.branchname)
        time.sleep(1)
        wd.find_element(By.ID, "context-commitish-filter-field").send_keys(Keys.ENTER)

    def open_project_page(self, wd):
        wd.find_element(By.CSS_SELECTOR, "#dashboard-repos-container > #repos-container .source .d-inline-flex").click()

    def open_login_page(self, wd, sign_in_link):
        wd.find_element(By.LINK_TEXT, sign_in_link).click()

    def login(self, wd, username, password):
        wd.find_element(By.ID, "login_field").send_keys(username)
        wd.find_element(By.ID, "password").click()
        wd.find_element(By.ID, "password").send_keys(password)
        wd.find_element(By.NAME, "commit").click()

    def open_home_page(self, wd, starting_page):
        wd.get(starting_page)
        # wd.set_window_size(1936, 1066)
        wd.maximize_window()

    def tearDown(self):
        wd = self.wd
        wd.quit()


if __name__ == '__main__':
    unittest.main()
